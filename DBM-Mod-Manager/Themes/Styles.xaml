<ResourceDictionary x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:darkBlendTheme="clr-namespace:DarkBlendTheme"
                    mc:Ignorable="d">

    <!--Converters-->
    <BooleanToVisibilityConverter x:Uid="BooleanToVisibilityConverter_1" x:Key="bool2VisibilityConverter"/>

    <!--Colors-->
    <Color x:Uid="Color_1" x:Key="WindowBackgroundColor">#444444</Color>
    <Color x:Uid="Color_2" x:Key="DarkBackgroundColor">#333333</Color>
    <Color x:Uid="Color_3" x:Key="LightBackgroundColor">#595959</Color>
    <Color x:Uid="Color_4" x:Key="BackgroundColor">#3D3D3D</Color>
    <Color x:Uid="Color_5" x:Key="DisabledBackgroundColor">#424242</Color>
    <Color x:Uid="Color_6" x:Key="LightDisabledBackgroundColor">#666666</Color>
    
    <Color x:Uid="Color_7" x:Key="ForegroundColor">#EFEFEF</Color>

    <Color x:Uid="Color_8" x:Key="HighlightColor">#BDBDBD</Color>
    <Color x:Uid="Color_9" x:Key="HotColor">#525252</Color>
    
    <!--Brushes-->
    <SolidColorBrush x:Uid="SolidColorBrush_1" x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_2" x:Key="MouseOverForegroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_3" x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_4" x:Key="TabControlNormalBorderBrush" Color="{StaticResource WindowBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_5" x:Key="TabItemHotBackground" Color="{StaticResource HotColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_6" x:Key="TabItemSelectedBackground" Color="{StaticResource LightBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_7" x:Key="TabItemHotBorderBrush" Color="{StaticResource HotColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_8" x:Key="TabItemDisabledBackground" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_9" x:Key="TabItemDisabledBorderBrush" Color="{StaticResource DarkBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_10" x:Key="ScrollViewerBackground" Color="{StaticResource DarkBackgroundColor}" />
    <SolidColorBrush x:Uid="SolidColorBrush_11" x:Key="VerticalScrollBarBackground" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_12" x:Key="HorizontalScrollBarBackground" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Uid="SolidColorBrush_13" x:Key="VerticalScrollBarThumb" Color="#808080"/>
    <SolidColorBrush x:Uid="SolidColorBrush_14" x:Key="ScrollBarDisabledBackground" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_15" x:Key="ScrollBarHotThumb" Color="#CCCCCC"/>
    <SolidColorBrush x:Uid="SolidColorBrush_16" x:Key="ScrollBarSelectedThumb" Color="#E5E5E5"/>
    <SolidColorBrush x:Uid="SolidColorBrush_17" x:Key="CornerBorder" Color="{StaticResource DarkBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_18" x:Key="TextBoxBorder" Color="{StaticResource DarkBackgroundColor}" />
    <SolidColorBrush x:Uid="SolidColorBrush_19" x:Key="TextBoxBackground" Color="{StaticResource DarkBackgroundColor}" />
    <SolidColorBrush x:Uid="SolidColorBrush_20" x:Key="TextBoxDisabledForeground" Color="#8C8C8C" />
    <SolidColorBrush x:Uid="SolidColorBrush_21" x:Key="TextBoxDisabledBackground" Color="{StaticResource DisabledBackgroundColor}" />
    <SolidColorBrush x:Uid="SolidColorBrush_22" x:Key="InactiveSelectionHighlightBrush" Color="#335C85"/>

    <SolidColorBrush x:Uid="SolidColorBrush_23" x:Key="ComboBoxButtonNormalBackground" Color="#808080"/>

    <SolidColorBrush x:Uid="SolidColorBrush_24" x:Key="ButtonNormalBackground" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_25" x:Key="ButtonNormalBorder" Color="#4C4C4C"/>

    <SolidColorBrush x:Uid="SolidColorBrush_26" x:Key="ButtonForeground" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_27" x:Key="MouseOverButtonForeground" Color="#1B1B1B"/>
    <SolidColorBrush x:Uid="SolidColorBrush_28" x:Key="ButtonBackground" Color="{StaticResource LightBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_29" x:Key="ButtonBorder" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_30" x:Key="PressedButtonBackground" Color="{StaticResource DisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_31" x:Key="MouseOverButtonBackground" Color="#AAAAAA"/>
    <SolidColorBrush x:Uid="SolidColorBrush_32" x:Key="DisabledButtonBackground" Color="{StaticResource LightDisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_33" x:Key="DisabledButtonForeground" Color="{StaticResource DisabledBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_34" x:Key="Expander.Background" Color="{StaticResource LightBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_35" x:Key="Expander.MouseOver.Arrow.Stroke" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_36" x:Key="Expander.Disabled.Arrow.Stroke" Color="{StaticResource LightDisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_37" x:Key="Expander.Static.Arrow.Stroke" Color="#AAAAAA"/>

    <SolidColorBrush x:Uid="SolidColorBrush_38" x:Key="CheckBoxFillNormal" Color="{StaticResource LightDisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_39" x:Key="CheckBoxMouseOverStroke" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_40" x:Key="CheckBoxDisabledStroke" Color="{StaticResource DisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_41" x:Key="CheckBoxDisabledForeground" Color="#939393"/>
    <SolidColorBrush x:Uid="SolidColorBrush_42" x:Key="CheckBoxStroke" Color="{StaticResource DarkBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_43" x:Key="RadioButtonMouseOverStroke" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_44" x:Key="RadioButtonDisabledStroke" Color="{StaticResource DisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_45" x:Key="RadioButtonDisabledForeground" Color="#939393"/>
    <SolidColorBrush x:Uid="SolidColorBrush_46" x:Key="RadioButtonStroke" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_47" x:Key="RadioButtonForeground" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_48" x:Key="RadioButtonBackground" Color="{StaticResource LightDisabledBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_49" x:Key="ListBorder" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_50" x:Key="ListBackground" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_51" x:Key="SelectedListItem" Color="{StaticResource HighlightColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_52" x:Key="SelectedListItemForeground" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_53" x:Key="MouseOverListItem" Color="#4A4A4A"/>

    <SolidColorBrush x:Uid="SolidColorBrush_54" x:Key="TreeViewBackground" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_55" x:Key="TreeViewDisabledForeground" Color="{StaticResource LightDisabledBackgroundColor}"/>

    <SolidColorBrush x:Uid="SolidColorBrush_56" x:Key="DisabledMenuForeground" Color="#656565"/>
    <SolidColorBrush x:Uid="SolidColorBrush_57" x:Key="MenuBackground" Color="#3A3A3A"/>
    <SolidColorBrush x:Uid="SolidColorBrush_58" x:Key="MenuItemSelectionFill" Color="{StaticResource HighlightColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_59" x:Key="SubMenuBackgroundBrush" Color="#3A3A3A"/>
    <SolidColorBrush x:Uid="SolidColorBrush_60" x:Key="MenuItemPressedFill" Color="{StaticResource HighlightColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_61" x:Key="SubMenuBorderBrush" Color="{StaticResource LightBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_62" x:Key="SubMenuRepeatButtonBrush" Color="{StaticResource HotColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_63" x:Key="SubMenuHoverRepeatButtonBrush" Color="#7F7F7F"/>
    <SolidColorBrush x:Uid="SolidColorBrush_64" x:Key="MenuSeparatorBrush" Color="#4C4C4C"/>

    <SolidColorBrush x:Uid="SolidColorBrush_65" x:Key="DataGridBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_66" x:Key="DataGridHeaderBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_67" x:Key="DataGridHeaderMouseOverBrush" Color="#AAAAAA"/>
    <SolidColorBrush x:Uid="SolidColorBrush_68" x:Key="DataGridHeaderBorderBrush" Color="{StaticResource DisabledBackgroundColor}"/>
	<SolidColorBrush x:Uid="SolidColorBrush_69" x:Key="DataGridRowBorderBrush" Color="{StaticResource DisabledBackgroundColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_70" x:Key="DataGridRowBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
	<SolidColorBrush x:Uid="SolidColorBrush_71" x:Key="DataGridRowSelectedBrush" Color="{StaticResource HighlightColor}"/>
    <SolidColorBrush x:Uid="SolidColorBrush_72" x:Key="GridLinesBrush" Color="Transparent"/>
    <SolidColorBrush x:Uid="SolidColorBrush_73" x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="Red"/>

    <Geometry x:Uid="Geometry_1" x:Key="MenuScrollDownArrowGeometry">M-0.7,5.2 L-2.2,6.7 3.6,12.6 9.5,6.7 8,5.2 3.6,9.6 z</Geometry>
    <Geometry x:Uid="Geometry_2" x:Key="MenuScrollUpArrowGeometry">M-2.2,10.9 L-0.7,12.4 3.7,8 8,12.4 9.5,10.9 3.7,5 z</Geometry>
    <Geometry x:Uid="Geometry_3" x:Key="Checkmark">M1.0E-41,4.2 L0,2.1 2.5,4.5 6.7,4.4E-47 6.7,2.3 2.5,6.7 z</Geometry>
    <Geometry x:Uid="Geometry_4" x:Key="CheckBoxCheckmark">M7.2,5 L5.5,7.16 4.16,6.3 3.5,6.7 5.5,8.4 8.6,5.25 C8.6,5.25 8,4.7 7.22,5</Geometry>
    <Geometry x:Uid="Geometry_5" x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Uid="Geometry_6" x:Key="ExpanderNormalArrow">M 1,1.5 L 4.5,5 L 8,1.5</Geometry>
    <Geometry x:Uid="Geometry_7" x:Key="ExpanderCheckedArrow">M 1,4.5  L 4.5,1  L 8,4.5</Geometry>
    <Geometry x:Uid="Geometry_8" x:Key="TabItemRoundedCorner">M6.5,2.6C4.767,0.973 2.509,0 0,0 0,0 0,19 0,19L23,19z</Geometry>
    <Geometry x:Uid="Geometry_9" x:Key="RepeatButton">M3.5445026,0 L7.0890052,7.0890053 L3.0459049E-09,7.0890053 z</Geometry>
    <Geometry x:Uid="Geometry_10" x:Key="ComboBoxArrow">M-0,6 L-0,8 8,8 8,-0 6,-0 6,6 z</Geometry>
    <Geometry x:Uid="Geometry_11" x:Key="ExpanderToggleButtonArrow">M5,-0 L9,5 1,5 z</Geometry>

    <!--FontStyle-->
    <Style x:Uid="Style_1" TargetType="{x:Type TextBlock}">
        <Setter x:Uid="Setter_1" Property="FontFamily" Value="Calibri light"/>
        <!--<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>-->
    </Style>
    <Style x:Uid="Style_2" TargetType="{x:Type Control}">
        <Setter x:Uid="Setter_2" Property="FontFamily" Value="Calibri light"/>
        <Setter x:Uid="Setter_582" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
    <Style x:Uid="Style_3" TargetType="{x:Type Window}">
        <Setter x:Uid="Setter_4" Property="FontFamily" Value="Calibri light"/>
        <Setter x:Uid="Setter_5" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_6" Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>
    <!-- Necessary for Blend designer for UserControls -->
    <Style x:Uid="Style_4" TargetType="{x:Type UserControl}">
        <Setter x:Uid="Setter_7" Property="FontFamily" Value="Calibri light"/>
        <Setter x:Uid="Setter_8" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>


    <!--TabControl-->
    <Style x:Uid="Style_5" TargetType="{x:Type TabControl}">
        <Style.Resources>
            <Style x:Uid="Style_6" x:Key="BottomStyle" TargetType="{x:Type FrameworkElement}">
                <Setter x:Uid="Setter_9" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter x:Uid="Setter_10" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup x:Uid="TransformGroup_1">
                            <ScaleTransform x:Uid="ScaleTransform_1" ScaleY="-1" ScaleX="1"/>
                            <SkewTransform x:Uid="SkewTransform_1" AngleY="0" AngleX="0"/>
                            <RotateTransform x:Uid="RotateTransform_1" Angle="0"/>
                            <TranslateTransform x:Uid="TranslateTransform_1" />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_7" x:Key="RightStyle" TargetType="{x:Type FrameworkElement}">
                <Setter x:Uid="Setter_11" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform x:Uid="RotateTransform_2" Angle="90" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_8" x:Key="RoundedCornerLeftStyle" TargetType="{x:Type FrameworkElement}">
                <Setter x:Uid="Setter_12" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform x:Uid="RotateTransform_3" Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Setter x:Uid="Setter_13" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter x:Uid="Setter_14" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform x:Uid="ScaleTransform_2" ScaleY="-1"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_9" x:Key="LeftStyle" TargetType="{x:Type FrameworkElement}">
                <Setter x:Uid="Setter_15" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform x:Uid="RotateTransform_4" Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_10" x:Key="DefaultStyle" TargetType="{x:Type FrameworkElement}">
                <Setter x:Uid="Setter_16" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform x:Uid="RotateTransform_5" Angle="0" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_11" x:Key="TabItemFocusVisual">
                <Setter x:Uid="Setter_17" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_1">
                            <Rectangle x:Uid="Rectangle_1" Margin="3,3,3,1" SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Uid="Style_12" TargetType="{x:Type TabItem}">
                <Setter x:Uid="Setter_18" Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
                <Setter x:Uid="Setter_19" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter x:Uid="Setter_20" Property="Padding" Value="6,1,6,1"/>
                <Setter x:Uid="Setter_21" Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
                <Setter x:Uid="Setter_22" Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter x:Uid="Setter_23" Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter x:Uid="Setter_24" Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter x:Uid="Setter_25" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type TabItem}">
                            <Grid x:Uid="Container" x:Name="Container">
                                <Grid x:Uid="Grid" x:Name="Grid" SnapsToDevicePixels="true" Margin="1,0,-12,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
                                        <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
                                        <RowDefinition x:Uid="RowDefinition_2" Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Uid="Bd" x:Name="Bd"
									    Grid.Column="0"
									    CornerRadius="3,0,0,0"
									    BorderBrush="{TemplateBinding BorderBrush}"
									    BorderThickness="0"
									    Background="{TemplateBinding Background}"
									    Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Uid="Content" x:Name="Content" Margin="6,1,6,1" ContentSource="Header"
										    HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										    RecognizesAccessKey="True"
										    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										    VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Border>
                                    <Path x:Uid="RoundedCorner" x:Name="RoundedCorner"
                                          Grid.Column="1"
                                          Grid.Row="0"
                                          Width="24"
                                          Stretch="Fill"
                                          Data="{StaticResource TabItemRoundedCorner}"
                                          Fill="{TemplateBinding Background}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_1" Property="IsMouseOver" Value="true">
                                    <Setter x:Uid="Setter_26" Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                                    <Setter x:Uid="Setter_27" Property="Fill"  TargetName="RoundedCorner" Value="{StaticResource TabItemHotBackground}"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_2" Property="IsSelected" Value="true">
                                    <Setter x:Uid="Setter_28" Property="Panel.ZIndex" Value="1"/>
                                    <Setter x:Uid="Setter_29" Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                                    <Setter x:Uid="Setter_30" Property="Fill"  TargetName="RoundedCorner" Value="{StaticResource TabItemSelectedBackground}"/>
                                </Trigger>
                                <MultiTrigger x:Uid="MultiTrigger_1">
                                    <MultiTrigger.Conditions>
                                        <Condition x:Uid="Condition_1" Property="IsSelected" Value="false"/>
                                        <Condition x:Uid="Condition_2" Property="IsMouseOver" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter x:Uid="Setter_31" Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                                    <Setter x:Uid="Setter_32" Property="Fill"  TargetName="RoundedCorner" Value="{StaticResource TabItemHotBorderBrush}"/>
                                </MultiTrigger>
                                <Trigger x:Uid="Trigger_3" Property="TabStripPlacement" Value="Bottom">
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>-->
                                    <Setter x:Uid="Setter_33" Property="Style" TargetName="RoundedCorner" Value="{StaticResource BottomStyle}"/>
                                    <Setter x:Uid="Setter_34" Property="Style" TargetName="Bd" Value="{StaticResource BottomStyle}"/>
                                    <Setter x:Uid="Setter_35" Property="Style" TargetName="Content" Value="{StaticResource BottomStyle}"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_4" Property="TabStripPlacement" Value="Left">
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>-->
                                    <Setter x:Uid="Setter_36" Property="Grid.Row" TargetName="Bd" Value="0"/>
                                    <Setter x:Uid="Setter_37" Property="Grid.Column" TargetName="Bd" Value="0"/>
                                    <Setter x:Uid="Setter_38" Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                    <Setter x:Uid="Setter_39" Property="Grid.Column" TargetName="RoundedCorner" Value="0"/>
                                    <Setter x:Uid="Setter_40" Property="Style" TargetName="RoundedCorner" Value="{StaticResource RoundedCornerLeftStyle}"/>
                                    <Setter x:Uid="Setter_41" Property="Style" TargetName="Bd" Value="{StaticResource LeftStyle}"/>
                                    <Setter x:Uid="Setter_42" Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                    <Setter x:Uid="Setter_43" Property="Margin" TargetName="Grid" Value="0,1,0,-16"/>
                                    <Setter x:Uid="Setter_44" Property="CornerRadius" TargetName="Bd" Value="0 3 0 0"/>
                                    <Setter x:Uid="Setter_45" Property="Margin" TargetName="RoundedCorner" Value="0 4 0 0"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_5" Property="TabStripPlacement" Value="Right">
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>-->
                                    <Setter x:Uid="Setter_46" Property="Grid.Row" TargetName="Bd" Value="0"/>
                                    <Setter x:Uid="Setter_47" Property="Grid.Column" TargetName="Bd" Value="1"/>
                                    <Setter x:Uid="Setter_48" Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                    <Setter x:Uid="Setter_49" Property="Grid.Column" TargetName="RoundedCorner" Value="1"/>
                                    <Setter x:Uid="Setter_50" Property="Style" TargetName="RoundedCorner" Value="{StaticResource RightStyle}"/>
                                    <Setter x:Uid="Setter_51" Property="Style" TargetName="Bd" Value="{StaticResource RightStyle}"/>
                                    <Setter x:Uid="Setter_52" Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                    <Setter x:Uid="Setter_53" Property="Margin" TargetName="Grid" Value="0,1,0,-12"/>
                                </Trigger>
                                <MultiTrigger x:Uid="MultiTrigger_2">
                                    <MultiTrigger.Conditions>
                                        <Condition x:Uid="Condition_3" Property="IsSelected" Value="true"/>
                                        <Condition x:Uid="Condition_4" Property="TabStripPlacement" Value="Top"/>
                                    </MultiTrigger.Conditions>
                                    <Setter x:Uid="Setter_54" Property="Margin"  Value="0,0,0,-1"/>
                                </MultiTrigger>
                                <MultiTrigger x:Uid="MultiTrigger_3">
                                    <MultiTrigger.Conditions>
                                        <Condition x:Uid="Condition_5" Property="IsSelected" Value="true"/>
                                        <Condition x:Uid="Condition_6" Property="TabStripPlacement" Value="Bottom"/>
                                    </MultiTrigger.Conditions>
                                    <Setter x:Uid="Setter_55" Property="Margin" Value="0,-1,0,0"/>
                                </MultiTrigger>
                                <MultiTrigger x:Uid="MultiTrigger_4">
                                    <MultiTrigger.Conditions>
                                        <Condition x:Uid="Condition_7" Property="IsSelected" Value="true"/>
                                        <Condition x:Uid="Condition_8" Property="TabStripPlacement" Value="Left"/>
                                    </MultiTrigger.Conditions>
                                    <Setter x:Uid="Setter_56" Property="Margin" Value="0,0,-1,0"/>
                                </MultiTrigger>
                                <MultiTrigger x:Uid="MultiTrigger_5">
                                    <MultiTrigger.Conditions>
                                        <Condition x:Uid="Condition_9" Property="IsSelected" Value="true"/>
                                        <Condition x:Uid="Condition_10" Property="TabStripPlacement" Value="Right"/>
                                    </MultiTrigger.Conditions>
                                    <Setter x:Uid="Setter_57" Property="Margin" Value="-1,0,0,0"/>
                                </MultiTrigger>
                                <Trigger x:Uid="Trigger_6" Property="IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_58" Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                    <Setter x:Uid="Setter_59" Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                    <Setter x:Uid="Setter_60" Property="Fill" TargetName="RoundedCorner" Value="{StaticResource TabItemDisabledBackground}"></Setter>
                                    <Setter x:Uid="Setter_61" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter x:Uid="Setter_62" Property="OverridesDefaultStyle" Value="True" />
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
        <Setter x:Uid="Setter_63" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_64" Property="Padding" Value="4"/>
        <Setter x:Uid="Setter_65" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_66" Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter x:Uid="Setter_67" Property="Background" Value="{DynamicResource TabItemSelectedBackground}"/>
        <Setter x:Uid="Setter_68" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_69" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_70" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type TabControl}">
                    <Grid x:Uid="Grid_1" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition0" x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Uid="ColumnDefinition1" x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition0" x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition1" x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Uid="HeaderPanel" x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true"
							Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Uid="ContentPanel" x:Name="ContentPanel"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Grid.Column="0"
							Grid.Row="1"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Uid="PART_SelectedContentHost" x:Name="PART_SelectedContentHost"
								ContentSource="SelectedContent"
								Margin="{TemplateBinding Padding}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_7" Property="TabStripPlacement" Value="Bottom">
                            <Setter x:Uid="Setter_71" Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter x:Uid="Setter_72" Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter x:Uid="Setter_73" Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter x:Uid="Setter_74" Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>-->
                        </Trigger>
                        <Trigger x:Uid="Trigger_8" Property="TabStripPlacement" Value="Left">
                            <Setter x:Uid="Setter_75" Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter x:Uid="Setter_76" Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter x:Uid="Setter_77" Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter x:Uid="Setter_78" Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter x:Uid="Setter_79" Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter x:Uid="Setter_80" Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter x:Uid="Setter_81" Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter x:Uid="Setter_82" Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>-->
                        </Trigger>
                        <Trigger x:Uid="Trigger_9" Property="TabStripPlacement" Value="Right">
                            <Setter x:Uid="Setter_83" Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter x:Uid="Setter_84" Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter x:Uid="Setter_85" Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter x:Uid="Setter_86" Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter x:Uid="Setter_87" Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter x:Uid="Setter_88" Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter x:Uid="Setter_89" Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter x:Uid="Setter_90" Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>-->
                            <Setter x:Uid="Setter_91" Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>

                        </Trigger>
                        <Trigger x:Uid="Trigger_10" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_92" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollBar -->
    <Style x:Uid="Style_13" TargetType="{x:Type ScrollViewer}">
        <Setter x:Uid="Setter_93" Property="Background" Value="{DynamicResource ScrollViewerBackground}"/>
        <Setter x:Uid="Setter_94" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_4" TargetType="{x:Type ScrollViewer}">
                    <Grid x:Uid="Grid_2" x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_3" Width="*"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_4" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_3" Height="*"/>
                            <RowDefinition x:Uid="RowDefinition_4" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Uid="Corner" x:Name="Corner"
							Grid.Column="1"
							Grid.Row="1"
							Fill="{TemplateBinding Background}"/>
                        <ScrollContentPresenter x:Uid="PART_ScrollContentPresenter" x:Name="PART_ScrollContentPresenter"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="0"
							Margin="{TemplateBinding Padding}"/>
                        <ScrollBar x:Uid="PART_VerticalScrollBar" x:Name="PART_VerticalScrollBar"
							AutomationProperties.AutomationId="VerticalScrollBar"
							Cursor="Arrow"
							Grid.Column="1"
							Grid.Row="0"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0" 
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Style="{DynamicResource VerticalScrollBarStyle}"/>
                        <ScrollBar x:Uid="PART_HorizontalScrollBar" x:Name="PART_HorizontalScrollBar"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Grid.Column="0" 
							Grid.Row="1"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Style="{DynamicResource HorisontalScrollBarStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_14" x:Key="RepeatButtonUpStyle" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_95" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_96" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_97" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_98" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_5" TargetType="{x:Type RepeatButton}">
                    <Grid x:Uid="Grid_3" Background="Transparent">
                        <Path x:Uid="TrianglePath" x:Name="TrianglePath" Data="{StaticResource RepeatButton}" 
									Fill="{StaticResource VerticalScrollBarThumb}" Height="Auto" Margin="5" Stretch="Fill" Width="Auto"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_11" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_99" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_12" Property="IsPressed"  Value="True">
                            <Setter x:Uid="Setter_100" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_15" x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter x:Uid="Setter_101" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_102" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_103" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_6" TargetType="{x:Type Thumb}">
                    <Grid x:Uid="Grid_4">
                        <Rectangle x:Uid="VerticalThumb" x:Name="VerticalThumb" Fill="{StaticResource VerticalScrollBarThumb}"
									Width="7.4" RadiusX="4" RadiusY="4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_13" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_104" Property="Fill" TargetName="VerticalThumb" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_14" Property="IsDragging"  Value="True">
                            <Setter x:Uid="Setter_105" Property="Fill" TargetName="VerticalThumb" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_16" x:Key="RepeatButtonDownStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource RepeatButtonUpStyle}">
        <Setter x:Uid="Setter_106" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_7" TargetType="{x:Type RepeatButton}">
                    <Grid x:Uid="Grid_5" Background="Transparent">
                        <Path x:Uid="BottomTrianglePath" x:Name="BottomTrianglePath" Data="{StaticResource RepeatButton}" 
									Fill="{StaticResource VerticalScrollBarThumb}" Height="Auto" Margin="5" Stretch="Fill" Width="Auto"
									RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup x:Uid="TransformGroup_2">
                                    <ScaleTransform x:Uid="ScaleTransform_3" ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform x:Uid="SkewTransform_2" AngleY="0" AngleX="0"/>
                                    <RotateTransform x:Uid="RotateTransform_6" Angle="0"/>
                                    <TranslateTransform x:Uid="TranslateTransform_2"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_15" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_107" Property="Fill" TargetName="BottomTrianglePath" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_16" Property="IsPressed"  Value="True">
                            <Setter x:Uid="Setter_108" Property="Fill" TargetName="BottomTrianglePath" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_17" x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_109" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_110" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_111" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_112" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_113" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_8" TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Uid="Rectangle_2" Fill="{TemplateBinding Background}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Uid="Style_18" x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_114" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_115" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_116" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_117" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_118" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_9" TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Uid="Rectangle_3" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_19" x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter x:Uid="Setter_119" Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
        <Setter x:Uid="Setter_120" Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter x:Uid="Setter_121" Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter x:Uid="Setter_122" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_123" Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter x:Uid="Setter_124" Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter x:Uid="Setter_125" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_10" TargetType="{x:Type ScrollBar}">
                    <Grid x:Uid="Bg" x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_5" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition x:Uid="RowDefinition_6" Height="0.00001*"/>
                            <RowDefinition x:Uid="RowDefinition_7" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Uid="RepeatButton_1" Command="{x:Static ScrollBar.LineUpCommand}"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Style="{StaticResource RepeatButtonUpStyle}"/>
                        <Track x:Uid="PART_Track" x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Uid="RepeatButton_2" Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Uid="RepeatButton_3" Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Uid="Thumb_1" Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Uid="RepeatButton_4" Command="{x:Static ScrollBar.LineDownCommand}"
									IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" 
									Style="{DynamicResource RepeatButtonDownStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_17" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_126" Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_18" Property="Orientation" Value="Horizontal">
                <Setter x:Uid="Setter_127" Property="Width" Value="Auto"/>
                <Setter x:Uid="Setter_128" Property="MinWidth" Value="0"/>
                <Setter x:Uid="Setter_129" Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter x:Uid="Setter_130" Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter x:Uid="Setter_131" Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                <Setter x:Uid="Setter_132" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_11" TargetType="{x:Type ScrollBar}">
                            <Grid x:Uid="Grid_6" x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_5" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_6" Width="0.00001*"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_7" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Uid="RepeatButton_5" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource RepeatButtonUpStyle}"/>
                                <Track x:Uid="Track_1" x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Uid="RepeatButton_6" Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Uid="RepeatButton_7" Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Uid="Thumb_2" Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Uid="RepeatButton_8" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource RepeatButtonUpStyle}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_19" Property="IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_133" Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Uid="Style_20" x:Key="HorisontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter x:Uid="Setter_134" Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
        <Setter x:Uid="Setter_135" Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter x:Uid="Setter_136" Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter x:Uid="Setter_137" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_138" Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter x:Uid="Setter_139" Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_20" Property="Orientation" Value="Horizontal">
                <Setter x:Uid="Setter_140" Property="Width" Value="Auto"/>
                <Setter x:Uid="Setter_141" Property="MinWidth" Value="0"/>
                <Setter x:Uid="Setter_142" Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter x:Uid="Setter_143" Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter x:Uid="Setter_144" Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                <Setter x:Uid="Setter_145" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_12" TargetType="{x:Type ScrollBar}">
                            <Grid x:Uid="Grid_7" x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_8" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_9" Width="0.00001*"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_10" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Uid="RepeatButton_9" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource RepeatLeftButtonStyle}"/>
                                <Track x:Uid="Track_2" x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Uid="RepeatButton_10" Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Uid="RepeatButton_11" Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Uid="Thumb_3" Style="{DynamicResource HorisontalThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Uid="RepeatButton_12" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource RepeatRightButtonStyle}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_21" Property="IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_146" Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Uid="Style_21" x:Key="HorisontalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter x:Uid="Setter_147" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_148" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_149" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_13" TargetType="{x:Type Thumb}">
                    <Grid x:Uid="Grid_8">
                        <Rectangle x:Uid="Rectangle_4" x:Name="VerticalThumb" Fill="{StaticResource VerticalScrollBarThumb}"
									Height="7.4" RadiusX="4" RadiusY="4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_22" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_150" Property="Fill" TargetName="VerticalThumb" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_23" Property="IsDragging"  Value="True">
                            <Setter x:Uid="Setter_151" Property="Fill" TargetName="VerticalThumb" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_22" x:Key="RepeatLeftButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_152" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_153" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_154" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_155" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_14" TargetType="{x:Type RepeatButton}">
                    <Grid x:Uid="Grid_9" Background="Transparent" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup x:Uid="TransformGroup_3">
                                <ScaleTransform x:Uid="ScaleTransform_4"/>
                                <SkewTransform x:Uid="SkewTransform_3"/>
                                <RotateTransform x:Uid="RotateTransform_7" Angle="270"/>
                                <TranslateTransform x:Uid="TranslateTransform_3"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Path x:Uid="Path_1" x:Name="TrianglePath" Data="{StaticResource RepeatButton}" 
									Fill="{StaticResource VerticalScrollBarThumb}" Height="Auto" Margin="5" Stretch="Fill" Width="Auto"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_24" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_156" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_25" Property="IsPressed"  Value="True">
                            <Setter x:Uid="Setter_157" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_23" x:Key="RepeatRightButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_158" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_159" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_160" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_161" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_15" TargetType="{x:Type RepeatButton}">
                    <Grid x:Uid="Grid_10" Background="Transparent" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup x:Uid="TransformGroup_4">
                                <ScaleTransform x:Uid="ScaleTransform_5"/>
                                <SkewTransform x:Uid="SkewTransform_4"/>
                                <RotateTransform x:Uid="RotateTransform_8" Angle="270"/>
                                <TranslateTransform x:Uid="TranslateTransform_4"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Path x:Uid="Path_2" x:Name="TrianglePath" Data="{StaticResource RepeatButton}" 
									Fill="{StaticResource VerticalScrollBarThumb}" Height="Auto" Margin="5" Stretch="Fill" Width="Auto" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup x:Uid="TransformGroup_5">
                                    <ScaleTransform x:Uid="ScaleTransform_6"/>
                                    <SkewTransform x:Uid="SkewTransform_5"/>
                                    <RotateTransform x:Uid="RotateTransform_9" Angle="180"/>
                                    <TranslateTransform x:Uid="TranslateTransform_5"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_26" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_162" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarHotThumb}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_27" Property="IsPressed"  Value="True">
                            <Setter x:Uid="Setter_163" Property="Fill" TargetName="TrianglePath" Value="{StaticResource ScrollBarSelectedThumb}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox -->
    <Style x:Uid="Style_24" BasedOn="{StaticResource {x:Type Control}}" TargetType="{x:Type TextBox}">
        <Setter x:Uid="Setter_164" Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter x:Uid="Setter_165" Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter x:Uid="Setter_166" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_167" Property="Padding" Value="2,2,2,1"/>
        <Setter x:Uid="Setter_168" Property="AllowDrop" Value="true"/>
        <Setter x:Uid="Setter_169" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_170" Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter x:Uid="Setter_171" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_172" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_16" TargetType="{x:Type TextBox}">
                    <Border x:Uid="Border_1" x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}" 
						Background="{TemplateBinding Background}"
						CornerRadius="3"
						SnapsToDevicePixels="true">
                        <ScrollViewer x:Uid="PART_ContentHost" x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" 
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_28" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_173" Property="Foreground" Value="{StaticResource TextBoxDisabledForeground}"/>
                            <Setter x:Uid="Setter_174" Property="Background" TargetName="PART_ContentHost" Value="{StaticResource TextBoxDisabledBackground}"/>
                            <Setter x:Uid="Setter_175" Property="Background" TargetName="Bd" Value="{StaticResource TextBoxDisabledBackground}"/>
                            <Setter x:Uid="Setter_176" Property="BorderBrush" TargetName="Bd" Value="{StaticResource TextBoxDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource InactiveSelectionHighlightBrush}"/>
            </MultiTrigger>-->
        </Style.Triggers>
    </Style>

    <!-- ComboBox -->
    <Style x:Uid="Style_25" x:Key="ComboBoxFocusVisual">
        <Setter x:Uid="Setter_177" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_17">
                    <Rectangle x:Uid="Rectangle_5" Margin="2,2,21,2" SnapsToDevicePixels="true"
						Stroke="{StaticResource ForegroundBrush}"
						StrokeThickness="1"
						StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style x:Uid="Style_26" x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_178" Property="OverridesDefaultStyle" Value="true"/>
        <Setter x:Uid="Setter_179" Property="IsTabStop" Value="false"/>
        <Setter x:Uid="Setter_180" Property="Focusable" Value="false"/>
        <Setter x:Uid="Setter_181" Property="ClickMode" Value="Press"/>
        <Setter x:Uid="Setter_182" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_183" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_18" TargetType="{x:Type ToggleButton}">
                    <Border  
						x:Uid="Border_2" CornerRadius="3"             
						BorderBrush="{TemplateBinding BorderBrush}" 
						Background="{TemplateBinding Background}" 
						SnapsToDevicePixels="true">
                        <Border x:Uid="PopUpButton" x:Name="PopUpButton"
							HorizontalAlignment="Right"
							Background="{DynamicResource ComboBoxButtonNormalBackground}"
							CornerRadius="3"
							Margin="1"
							Width="15">
                            <Path x:Uid="Arrow" x:Name="Arrow" Data="{StaticResource ComboBoxArrow}" 
								HorizontalAlignment="Center" 
								VerticalAlignment="Center"
								Width="5.5"
								Height="5.5" 
								Stretch="Fill" 
								Fill="{DynamicResource ButtonForeground}"
                                RenderTransformOrigin="0.5,0.5" 
                                Margin="0,4,0,7">
                                <Path.RenderTransform>
                                    <TransformGroup x:Uid="TransformGroup_6">
                                        <ScaleTransform x:Uid="ScaleTransform_7"/>
                                        <SkewTransform x:Uid="SkewTransform_6"/>
                                        <RotateTransform x:Uid="RotateTransform_10" Angle="45"/>
                                        <TranslateTransform x:Uid="TranslateTransform_6"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_29" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_184" Property="Background" TargetName="PopUpButton" Value="{DynamicResource MouseOverButtonBackground}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_30" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_185" Property="Fill" TargetName="Arrow" Value="{DynamicResource DisabledButtonForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Uid="ControlTemplate_19" x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Uid="Placement" x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_11" Width="*"/>
                <ColumnDefinition x:Uid="ColumnDefinition_12" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Uid="PART_Popup" x:Name="PART_Popup"
				AllowsTransparency="true" 
				Grid.ColumnSpan="2"
				IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
				Margin="1" 
				PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
				Placement="Bottom">
                <Border x:Uid="Shdw" x:Name="Shdw"
					Background="Transparent" 
					MaxHeight="{TemplateBinding MaxDropDownHeight}" 
					MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Uid="DropDownBorder" x:Name="DropDownBorder" 
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="1" 
						Background="{TemplateBinding Background}">
                        <ScrollViewer x:Uid="DropDownScrollViewer" x:Name="DropDownScrollViewer">
                            <Grid x:Uid="Grid_11" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Uid="Canvas_1" HorizontalAlignment="Left" 
									Height="0" 
									VerticalAlignment="Top" 
									Width="0">
                                    <Rectangle x:Uid="OpaqueRect" x:Name="OpaqueRect" 
										Fill="{Binding Background, ElementName=DropDownBorder}" 
										Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
										Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Uid="ItemsPresenter" x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Contained" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <Border x:Uid="Border" x:Name="Border" 
				BorderBrush="{TemplateBinding Background}" 
				BorderThickness="{TemplateBinding BorderThickness}" 
				Background="{TemplateBinding Background}" 
				CornerRadius="3"
				Grid.ColumnSpan="2"/>
            <TextBox x:Uid="PART_EditableTextBox" x:Name="PART_EditableTextBox" />
            <ToggleButton x:Uid="ToggleButton_1" Grid.Column="1" 
				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
				Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_31" Property="HasItems" Value="false">
                <Setter x:Uid="Setter_186" Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger x:Uid="Trigger_32" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_187" Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                <Setter x:Uid="Setter_188" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
            </Trigger>
            <MultiTrigger x:Uid="MultiTrigger_6">
                <MultiTrigger.Conditions>
                    <Condition x:Uid="Condition_11" Property="IsGrouping" Value="true"/>
                    <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_189" Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger x:Uid="Trigger_33" Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter x:Uid="Setter_190" Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter x:Uid="Setter_191" Property="Background" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger x:Uid="Trigger_34" Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter x:Uid="Setter_192" Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter x:Uid="Setter_193" Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Uid="Style_27" TargetType="{x:Type ComboBox}">
        <Setter x:Uid="Setter_194" Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter x:Uid="Setter_195" Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter x:Uid="Setter_196" Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter x:Uid="Setter_197" Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter x:Uid="Setter_198" Property="Padding" Value="5,3,5,1"/>
        <Setter x:Uid="Setter_199" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_200" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_201" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_202" Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter x:Uid="Setter_203" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_204" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_205" Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}"/>
        <Setter x:Uid="Setter_206" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_20" TargetType="{x:Type ComboBox}">
                    <Grid x:Uid="MainGrid" x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_13" Width="*"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_14" MinWidth="18" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Uid="Popup_1" x:Name="PART_Popup" 
							AllowsTransparency="true" 
							Grid.ColumnSpan="2"
							IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
							Margin="1" 
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
							Placement="Bottom">
                            <Border x:Uid="Border_3" x:Name="Shdw" 
								Background="Transparent" 
								MaxHeight="{TemplateBinding MaxDropDownHeight}" 
								MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Uid="Border_4" x:Name="DropDownBorder" 
									BorderBrush="{TemplateBinding BorderBrush}" 
									BorderThickness="1" 
									Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Uid="ScrollViewer_1" x:Name="DropDownScrollViewer" 
										>
                                        <Grid x:Uid="Grid_12" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Uid="Canvas_2" HorizontalAlignment="Left" 
												Height="0" 
												VerticalAlignment="Top" 
												Width="0">
                                                <Rectangle x:Uid="Rectangle_6" x:Name="OpaqueRect" 
													Fill="{Binding Background, ElementName=DropDownBorder}" 
													Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
													Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Uid="ItemsPresenter_1" x:Name="ItemsPresenter" 
												KeyboardNavigation.DirectionalNavigation="Contained" 
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton x:Uid="ToggleButton_2" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" 
							Grid.ColumnSpan="2" 
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                        <ContentPresenter x:Uid="ContentPresenter_1" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							Content="{TemplateBinding SelectionBoxItem}" 
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							IsHitTestVisible="false" 
							Margin="{TemplateBinding Padding}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_35" Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter x:Uid="Setter_207" Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter x:Uid="Setter_208" Property="Background" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_36" Property="HasItems" Value="false">
                            <Setter x:Uid="Setter_209" Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_37" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_210" Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                            <Setter x:Uid="Setter_211" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_7">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_12" Property="IsGrouping" Value="true"/>
                                <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_212" Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_38" Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter x:Uid="Setter_213" Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter x:Uid="Setter_214" Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_39" Property="IsEditable" Value="true">
                <!--<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder2}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
                <Setter x:Uid="Setter_215" Property="IsTabStop" Value="false"/>
                <Setter x:Uid="Setter_216" Property="Padding" Value="3"/>
                <Setter x:Uid="Setter_217" Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Uid="Style_28" x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter x:Uid="Setter_218" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_219" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_220" Property="Padding" Value="3,0,3,0"/>
        <Setter x:Uid="Setter_221" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_222" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_21" TargetType="{x:Type ComboBoxItem}">
                    <Border x:Uid="Border_5" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Uid="ContentPresenter_2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_40" Property="IsHighlighted" Value="true">
                            <Setter x:Uid="Setter_223" Property="Background" TargetName="Bd" Value="{StaticResource SelectedListItem}"/>
                            <Setter x:Uid="Setter_224" Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_41" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_225" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button-->
    <Style x:Uid="Style_29" x:Key="ButtonFocusVisual">
        <Setter x:Uid="Setter_226" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_22">
                    <Rectangle x:Uid="Rectangle_7" Margin="2" SnapsToDevicePixels="true"
						Stroke="{StaticResource ForegroundBrush}"
						StrokeThickness="1"
						StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Uid="Style_30" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_227" Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter x:Uid="Setter_228" Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter x:Uid="Setter_229" Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter x:Uid="Setter_230" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_231" Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter x:Uid="Setter_232" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_233" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_234" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_235" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_23" TargetType="{x:Type Button}">
                    <Border 
						x:Uid="Border_6" Background="{TemplateBinding Background}" 
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="3">
                        <ContentPresenter x:Uid="ContentPresenter_3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}" 
							RecognizesAccessKey="True" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_42" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_236" Property="Background" Value="{StaticResource MouseOverButtonBackground}"/>
                            <Setter x:Uid="Setter_237" Property="Foreground" Value="{StaticResource MouseOverButtonForeground}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_43" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_238" Property="Background" Value="{StaticResource PressedButtonBackground}"/>
                            <Setter x:Uid="Setter_239" Property="Foreground" Value="{StaticResource ButtonForeground}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_44" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_240" Property="Foreground" Value="{StaticResource DisabledButtonForeground}"/>
                            <Setter x:Uid="Setter_241" Property="Background" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton-->
    <Style x:Uid="Style_31" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_242" Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter x:Uid="Setter_243" Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter x:Uid="Setter_244" Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter x:Uid="Setter_245" Property="BorderThickness" Value="1"></Setter>
        <Setter x:Uid="Setter_246" Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter x:Uid="Setter_247" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_248" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_249" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_250" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_24" TargetType="{x:Type ToggleButton}">
                    <Border  
						x:Uid="Border_7" BorderBrush="{TemplateBinding BorderBrush}" 
						Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true"
						CornerRadius="3">
                        <ContentPresenter x:Uid="ContentPresenter_4" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger x:Uid="MultiTrigger_8">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_13" Property="IsChecked" Value="false"/>
                                <Condition x:Uid="Condition_14" Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_45" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_251" Property="Background" Value="{StaticResource MouseOverButtonBackground}"/>
                            <Setter x:Uid="Setter_252" Property="Foreground" Value="{StaticResource MouseOverButtonForeground}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_46" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_253" Property="Foreground" Value="{StaticResource DisabledButtonForeground}"/>
                            <Setter x:Uid="Setter_254" Property="Background" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_47" Property="IsChecked" Value="true">
                            <Setter x:Uid="Setter_255" Property="Background" Value="{StaticResource PressedButtonBackground}"/>
                            <Setter x:Uid="Setter_256" Property="Foreground" Value="{StaticResource ButtonForeground}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander -->


    <Style x:Uid="Style_32" x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_257" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_25" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_8" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_13" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Uid="RowDefinition_8" Height="19"/>
                                <RowDefinition x:Uid="RowDefinition_9" Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Uid="Grid_14">
                                <Grid.LayoutTransform>
                                    <TransformGroup x:Uid="TransformGroup_7">
                                        <TransformGroup.Children>
                                            <TransformCollection x:Uid="TransformCollection_1">
                                                <RotateTransform x:Uid="RotateTransform_11" Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Path x:Uid="arrow" x:Name="arrow" Data="{StaticResource ExpanderNormalArrow}" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Uid="ContentPresenter_5" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_48" Property="IsChecked" Value="true">
                            <Setter x:Uid="Setter_258" Property="Data" TargetName="arrow" Value="{StaticResource ExpanderCheckedArrow}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_49" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_259" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_50" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_260" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_33" x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_261" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_26" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_9" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_15" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_15" Width="19"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_16" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Uid="Grid_16">
                                <Grid.LayoutTransform>
                                    <TransformGroup x:Uid="TransformGroup_8">
                                        <TransformGroup.Children>
                                            <TransformCollection x:Uid="TransformCollection_2">
                                                <RotateTransform x:Uid="RotateTransform_12" Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Path x:Uid="Path_3" x:Name="arrow" Data="{StaticResource ExpanderNormalArrow}" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Uid="ContentPresenter_6" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_51" Property="IsChecked" Value="true">
                            <Setter x:Uid="Setter_262" Property="Data" TargetName="arrow" Value="{StaticResource ExpanderCheckedArrow}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_52" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_263" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_53" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_264" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_34" x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_265" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_27" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_10" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_17" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Uid="RowDefinition_10" Height="19"/>
                                <RowDefinition x:Uid="RowDefinition_11" Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Uid="Grid_18">
                                <Grid.LayoutTransform>
                                    <TransformGroup x:Uid="TransformGroup_9">
                                        <TransformGroup.Children>
                                            <TransformCollection x:Uid="TransformCollection_3">
                                                <RotateTransform x:Uid="RotateTransform_13" Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Path x:Uid="Path_4" x:Name="arrow" Data="{StaticResource ExpanderNormalArrow}" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter x:Uid="ContentPresenter_7" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_54" Property="IsChecked" Value="true">
                            <Setter x:Uid="Setter_266" Property="Data" TargetName="arrow" Value="{StaticResource ExpanderCheckedArrow}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_55" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_267" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_56" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_268" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_35" x:Key="ExpanderHeaderFocusVisual">
        <Setter x:Uid="Setter_269" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_28">
                    <Border x:Uid="Border_11">
                        <Rectangle x:Uid="Rectangle_8" Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_36" x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_270" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_29" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_12" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_19" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_17" Width="19"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_18" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Uid="Path_5" x:Name="arrow" Data="{StaticResource ExpanderNormalArrow}" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter x:Uid="ContentPresenter_8" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_57" Property="IsChecked" Value="true">
                            <Setter x:Uid="Setter_271" Property="Data" TargetName="arrow" Value="{StaticResource ExpanderCheckedArrow}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_58" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_272" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_59" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_273" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_37" TargetType="{x:Type Expander}">
        <Setter x:Uid="Setter_274" Property="Foreground" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        <Setter x:Uid="Setter_275" Property="FontFamily" Value="Calibri light"/>
        <Setter x:Uid="Setter_276" Property="Padding" Value="2"/>
        <Setter x:Uid="Setter_277" Property="Background" Value="{StaticResource Expander.Background}"/>
        <Setter x:Uid="Setter_278" Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter x:Uid="Setter_279" Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter x:Uid="Setter_280" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_281" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_282" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_30" TargetType="{x:Type Expander}">
                    <Border x:Uid="Border_13" BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}" 
						Background="{TemplateBinding Background}" 
						CornerRadius="4" 
						SnapsToDevicePixels="true">
                        <DockPanel x:Uid="DockPanel_1">
                            <ToggleButton x:Uid="HeaderSite" x:Name="HeaderSite" 
								ContentTemplate="{TemplateBinding HeaderTemplate}" 
								ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
								Content="{TemplateBinding Header}" 
								DockPanel.Dock="Top" 
								Foreground="{TemplateBinding Foreground}" 
								FontWeight="{TemplateBinding FontWeight}" 
								FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
								FontStyle="{TemplateBinding FontStyle}" 
								FontStretch="{TemplateBinding FontStretch}" 
								FontSize="{TemplateBinding FontSize}" 
								FontFamily="{TemplateBinding FontFamily}" 
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
								IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
								Margin="5,1,1,1" 
								MinWidth="0" 
								MinHeight="0" 
								Padding="{TemplateBinding Padding}" 
								Style="{DynamicResource ExpanderToggleButtonStyle}" 
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Uid="ExpandSite" x:Name="ExpandSite" 
								DockPanel.Dock="Bottom"
								Focusable="false" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								Margin="{TemplateBinding Padding}" 
								Visibility="Collapsed" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_60" Property="IsExpanded" Value="true">
                            <Setter x:Uid="Setter_283" Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_61" Property="ExpandDirection" Value="Right">
                            <Setter x:Uid="Setter_284" Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter x:Uid="Setter_285" Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter x:Uid="Setter_286" Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_62" Property="ExpandDirection" Value="Up">
                            <Setter x:Uid="Setter_287" Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter x:Uid="Setter_288" Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter x:Uid="Setter_289" Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_63" Property="ExpandDirection" Value="Left">
                            <Setter x:Uid="Setter_290" Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter x:Uid="Setter_291" Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter x:Uid="Setter_292" Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_64" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_293" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_38" x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_294" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_31" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_14" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_20" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_19" Width="8"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_20" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Uid="Path_6" x:Name="arrow"
								Grid.ColumnSpan="2" 
								HorizontalAlignment="Left" 
								Fill="{StaticResource Expander.Static.Arrow.Stroke}" 
								Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
								StrokeThickness="1" 
								VerticalAlignment="Top" 
								Data="{StaticResource ExpanderToggleButtonArrow}" 
								Height="4.5" 
								Stretch="Fill" 
								Width="8" 
								RenderTransformOrigin="0.5,0.5" 
								Margin="2.068,6.27,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup x:Uid="TransformGroup_10">
                                        <RotateTransform x:Uid="RotateTransform_14" Angle="135"/>
                                        <TranslateTransform x:Uid="TranslateTransform_7" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter x:Uid="ContentPresenter_9" Grid.Column="1" 
								HorizontalAlignment="Left" 
								Margin="4,0,0,0" 
								RecognizesAccessKey="True" 
								SnapsToDevicePixels="True" 
								VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_65" Property="IsChecked" Value="false">
                            <Setter x:Uid="Setter_295" Property="Margin" TargetName="arrow" Value="-0.526,4.842,0,0"></Setter>
                            <Setter x:Uid="Setter_296" Property="RenderTransform" TargetName="arrow">
                                <Setter.Value>
                                    <TransformGroup x:Uid="TransformGroup_11">
                                        <RotateTransform x:Uid="RotateTransform_15" Angle="90"/>
                                        <TranslateTransform x:Uid="TranslateTransform_8" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter x:Uid="Setter_297" Property="Fill" TargetName="arrow" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_9">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_15" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_16" Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_298" Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            <Setter x:Uid="Setter_299" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_10">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_17" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_18" Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_300" Property="Fill" TargetName="arrow" Value="Transparent"/>
                            <Setter x:Uid="Setter_301" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_66" Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox-->


    <Style x:Uid="Style_39" x:Key="EmptyCheckBoxFocusVisual">
        <Setter x:Uid="Setter_302" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_32">
                    <Rectangle x:Uid="Rectangle_9" Margin="1" 
									SnapsToDevicePixels="true" 
									Stroke="{StaticResource CheckBoxStroke}" 
									StrokeThickness="1" 
									StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_40" x:Key="CheckRadioFocusVisual">
        <Setter x:Uid="Setter_303" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_33">
                    <Rectangle x:Uid="Rectangle_10" Margin="14,0,0,0"
									SnapsToDevicePixels="true" 
									Stroke="{StaticResource CheckBoxStroke}" 
									StrokeThickness="1" 
									StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_41" TargetType="{x:Type CheckBox}">
        <Setter x:Uid="Setter_304" Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
        <Setter x:Uid="Setter_305" Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter x:Uid="Setter_306" Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter x:Uid="Setter_307" Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter x:Uid="Setter_308" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_34" TargetType="{x:Type CheckBox}">
                    <BulletDecorator x:Uid="BulletDecorator_1" Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Uid="CheckBoxBorder" x:Name="CheckBoxBorder"
                                        Height="12"
										Width="12"
										BorderBrush="{TemplateBinding BorderBrush}" 
										BorderThickness="1"
										Background="{TemplateBinding Background}">
                                <Path x:Uid="CheckMark" x:Name="CheckMark"  
                                            Data="{StaticResource CheckBoxCheckmark}" 
											Height="Auto" 
											Width="Auto" 
											Stretch="Fill" 
											Fill="{StaticResource ButtonForeground}"
											Margin="1,1.007,1,1"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter x:Uid="ContentPresenter_10" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												Margin="{TemplateBinding Padding}" 
												RecognizesAccessKey="True" 
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_67" Property="HasContent" Value="true">
                            <Setter x:Uid="Setter_309" Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter x:Uid="Setter_310" Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_68" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_311" Property="Foreground" Value="{StaticResource CheckBoxDisabledForeground}"/>
                            <Setter x:Uid="Setter_312" Property="BorderBrush" TargetName="CheckBoxBorder" Value="{StaticResource CheckBoxDisabledStroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_69" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_313" Property="BorderBrush" TargetName="CheckBoxBorder" Value="{StaticResource CheckBoxMouseOverStroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_70" Property="IsChecked" Value="false">
                            <Setter x:Uid="Setter_314" TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RadioButton -->


    <Style x:Uid="Style_42" x:Key="RadioFocusVisual">
        <Setter x:Uid="Setter_315" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_35">
                    <Rectangle x:Uid="Rectangle_11" Margin="14,0,0,0" 
									SnapsToDevicePixels="true" 
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
									StrokeThickness="1" 
									StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_43" TargetType="{x:Type RadioButton}">
        <Setter x:Uid="Setter_316" Property="Foreground" Value="{StaticResource RadioButtonForeground}"/>
        <Setter x:Uid="Setter_317" Property="Background" Value="{StaticResource RadioButtonBackground}"/>
        <Setter x:Uid="Setter_318" Property="BorderBrush" Value="{StaticResource RadioButtonStroke}"/>
        <Setter x:Uid="Setter_319" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_320" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_36" TargetType="{x:Type RadioButton}">
                    <BulletDecorator x:Uid="BulletDecorator_2" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Uid="RadioButtonBorder" x:Name="RadioButtonBorder"
                                        Width="12"
										Height="12"
										CornerRadius="6" 
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}" 
										Background="{TemplateBinding Background}">
                                <Border x:Uid="RadioMark" x:Name="RadioMark" 
                                            Width="6"
										    Height="6"
										    CornerRadius="6"
										    BorderBrush="{StaticResource RadioButtonForeground}" 
										    Background="{StaticResource RadioButtonForeground}"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter x:Uid="ContentPresenter_11" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												Margin="{TemplateBinding Padding}" 
												RecognizesAccessKey="True" 
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_71" Property="HasContent" Value="true">
                            <Setter x:Uid="Setter_321" Property="FocusVisualStyle" Value="{StaticResource RadioFocusVisual}"/>
                            <Setter x:Uid="Setter_322" Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_72" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_323" Property="Foreground" Value="{StaticResource RadioButtonDisabledForeground}"/>
                            <Setter x:Uid="Setter_324" Property="BorderBrush" TargetName="RadioButtonBorder" Value="{StaticResource RadioButtonDisabledStroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_73" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_325" Property="BorderBrush" TargetName="RadioButtonBorder" Value="{StaticResource RadioButtonMouseOverStroke}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_74" Property="IsChecked" Value="false">
                            <Setter x:Uid="Setter_326" TargetName="RadioMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView -->
    <Style x:Uid="Style_44" TargetType="{x:Type ListView}">
        <Setter x:Uid="Setter_327" Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter x:Uid="Setter_328" Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter x:Uid="Setter_329" Property="BorderThickness" Value="1"/>

        <Setter x:Uid="Setter_330" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_331" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_332" Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter x:Uid="Setter_333" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_334" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_335" Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!--
    <Style x:Uid="Style_72" TargetType="{x:Type GridView}">
        <Setter x:Uid="Setter_585" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter x:Uid="Setter_586" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_587" Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter x:Uid="Setter_588" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_589" Property="Stylus.IsFlicksEnabled" Value="False"/>
    </Style>

    <Style x:Uid="Style_71" TargetType="{x:Type GridViewColumnHeader}">
        <Setter x:Uid="Setter_583" Property="Template">
            <Setter.Value>

                <ControlTemplate x:Uid="ControlTemplate_68" TargetType="GridViewColumnHeader">
                    <Border x:Uid="border" Name="border" BorderThickness="1" BorderBrush="Black" Background="{DynamicResource CheckBoxFillNormal}">
                        <ContentPresenter x:Uid="ContentPresenter_30" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_130" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_584" Property="Opacity" Value="0.6" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
-->
    <Style x:Uid="Style_45" TargetType="{x:Type ListViewItem}">
        <Setter x:Uid="Setter_336" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_337" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_338" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_339" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_340" Property="Padding" Value="2,0,0,0"/>
        <Setter x:Uid="Setter_341" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_37" TargetType="{x:Type ListViewItem}">
                    <Border x:Uid="Border_15" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" 
								Background="{TemplateBinding Background}" 
								Padding="{TemplateBinding Padding}" 
								SnapsToDevicePixels="true">
                        <ContentPresenter x:Uid="ContentPresenter_12" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_75" Property="IsSelected" Value="true">
                            <Setter x:Uid="Setter_342" Property="Background" TargetName="Bd" Value="{StaticResource SelectedListItem}"/>
                            <Setter x:Uid="Setter_343" Property="Foreground" Value="{StaticResource SelectedListItemForeground}"/>
                        </Trigger>
                        <!--<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>-->
                        <Trigger x:Uid="Trigger_76" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_344" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_11">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_19" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_20" Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_345" Property="Background" TargetName="Bd" Value="{StaticResource MouseOverListItem}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label -->

    <Style x:Uid="Style_46" TargetType="{x:Type Label}">
        <Setter x:Uid="Setter_346" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_347" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_348" Property="Padding" Value="5"/>
        <Setter x:Uid="Setter_349" Property="HorizontalContentAlignment" Value="Left"/>
        <Setter x:Uid="Setter_350" Property="VerticalContentAlignment" Value="Top"/>
        <Setter x:Uid="Setter_351" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_38" TargetType="{x:Type Label}">
                    <Border x:Uid="Border_16" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Uid="ContentPresenter_13" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_77" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_352" Property="Foreground" Value="{StaticResource DisabledButtonForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView -->

    <Style x:Uid="Style_47" TargetType="{x:Type TreeView}">
        <Setter x:Uid="Setter_353" Property="Background" Value="{StaticResource TreeViewBackground}"/>
        <Setter x:Uid="Setter_354" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_355" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_356" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_357" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_358" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_359" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_360" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_361" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_39" TargetType="{x:Type TreeView}">
                    <Border x:Uid="Border_17" x:Name="Bd" SnapsToDevicePixels="true">
                        <ScrollViewer x:Uid="_tv_scrollviewer_" x:Name="_tv_scrollviewer_" 
                                          Background="{TemplateBinding Background}"
                                          CanContentScroll="false" Focusable="false" 
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                          Padding="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter x:Uid="ItemsPresenter_2"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_78" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_362" Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
                        </Trigger>
                        <!--<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
    							<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
    						</Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Uid="Style_48" x:Key="TreeViewItemFocusVisual">
        <Setter x:Uid="Setter_363" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_40">
                    <Rectangle x:Uid="Rectangle_12"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_49" TargetType="{x:Type TreeViewItem}">
        <Setter x:Uid="Setter_364" Property="Background" Value="Transparent"/>
		<Setter x:Uid="Setter_365" Property="MinHeight" Value="21"/>
        <Setter x:Uid="Setter_366" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_367" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_368" Property="Padding" Value="2,4,2,3"/>
        <Setter x:Uid="Setter_369" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_370" Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter x:Uid="Setter_371" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_41" TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <darkBlendTheme:LeftMarginMultiplierConverter x:Uid="darkBlendTheme:LeftMarginMultiplierConverter_1" Length="15" x:Key="LengthConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel x:Uid="StackPanel_1">
                        <Border x:Uid="Border_18" Name="Bd"
                                      Background="{TemplateBinding Background}"
                                      Padding="{TemplateBinding Padding}">
                            <Grid x:Uid="Grid_21" Margin="{Binding Converter={StaticResource LengthConverter},
                                         RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_21" Width="15"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_22" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Uid="Expander" x:Name="Expander" 
                                              Grid.Column="0"
                                              Style="{DynamicResource TreeViewToggleButtonStyle}"
                                              IsChecked="{Binding Path=IsExpanded,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>

                                <ContentPresenter x:Uid="PART_Header" x:Name="PART_Header" 
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Uid="ItemsHost" x:Name="ItemsHost"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_79" Property="IsExpanded" Value="false">
                            <Setter x:Uid="Setter_372" TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_80" Property="HasItems" Value="false">
                            <Setter x:Uid="Setter_373" TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_12">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_21" Property="HasHeader" Value="false"/>
                                <Condition x:Uid="Condition_22" Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_13">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_23" Property="HasHeader" Value="false"/>
                                <Condition x:Uid="Condition_24" Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_374" TargetName="PART_Header" Property="MinHeight" Value="21"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_81" Property="IsSelected" Value="true">
                            <Setter x:Uid="Setter_375" TargetName="Bd" Property="Background" Value="{StaticResource SelectedListItem}"/>
                            <Setter x:Uid="Setter_376" Property="Foreground" Value="{StaticResource SelectedListItemForeground}"/>
                            <Setter x:Uid="Setter_377" Property="Style" TargetName="Expander" Value="{DynamicResource TreeViewSelectedToggleButtonStyle}"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_14">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_25" Property="IsMouseOver" SourceName="Bd" Value="true"/>
                                <Condition x:Uid="Condition_26" Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_378" Property="Background" TargetName="Bd" Value="{StaticResource MouseOverListItem}"/>
                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>-->
                        <Trigger x:Uid="Trigger_82" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_379" Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_50" x:Key="TreeViewToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_380" Property="Focusable" Value="False"/>
        <Setter x:Uid="Setter_381" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_42" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_19" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_22" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_23" Width="8"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_24" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Uid="Path_7" x:Name="arrow"
								Grid.ColumnSpan="2" 
								HorizontalAlignment="Left" 
								Fill="{StaticResource Expander.Static.Arrow.Stroke}" 
								Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
								StrokeThickness="1" 
								VerticalAlignment="Top" 
								Data="{StaticResource ExpanderToggleButtonArrow}" 
								Height="4.5" 
								Stretch="Fill" 
								Width="8" 
								RenderTransformOrigin="0.5,0.5" 
								Margin="2.068,6.27,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup x:Uid="TransformGroup_12">
                                        <RotateTransform x:Uid="RotateTransform_16" Angle="135"/>
                                        <TranslateTransform x:Uid="TranslateTransform_9" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter x:Uid="ContentPresenter_14" Grid.Column="1" 
								HorizontalAlignment="Left" 
								Margin="4,0,0,0" 
								RecognizesAccessKey="True" 
								SnapsToDevicePixels="True" 
								VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_83" Property="IsChecked" Value="false">
                            <Setter x:Uid="Setter_382" Property="Margin" TargetName="arrow" Value="-0.526,4.842,0,0"></Setter>
                            <Setter x:Uid="Setter_383" Property="RenderTransform" TargetName="arrow">
                                <Setter.Value>
                                    <TransformGroup x:Uid="TransformGroup_13">
                                        <RotateTransform x:Uid="RotateTransform_17" Angle="90"/>
                                        <TranslateTransform x:Uid="TranslateTransform_10" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter x:Uid="Setter_384" Property="Fill" TargetName="arrow" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_15">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_27" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_28" Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_385" Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            <Setter x:Uid="Setter_386" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_16">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_29" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_30" Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_387" Property="Fill" TargetName="arrow" Value="Transparent"/>
                            <Setter x:Uid="Setter_388" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_84" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_389" Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_51" x:Key="TreeViewSelectedToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_390" Property="Focusable" Value="False"/>
        <Setter x:Uid="Setter_391" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_43" TargetType="{x:Type ToggleButton}">
                    <Border x:Uid="Border_20" Padding="{TemplateBinding Padding}">
                        <Grid x:Uid="Grid_23" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_25" Width="8"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_26" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Uid="Path_8" x:Name="arrow"
								Grid.ColumnSpan="2" 
								HorizontalAlignment="Left" 
								Fill="{StaticResource TreeViewBackground}" 
								Stroke="{StaticResource TreeViewBackground}" 
								StrokeThickness="1" 
								VerticalAlignment="Top" 
								Data="{StaticResource ExpanderToggleButtonArrow}" 
								Height="4.5" 
								Stretch="Fill" 
								Width="8" 
								RenderTransformOrigin="0.5,0.5" 
								Margin="2.068,6.27,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup x:Uid="TransformGroup_14">
                                        <RotateTransform x:Uid="RotateTransform_18" Angle="135"/>
                                        <TranslateTransform x:Uid="TranslateTransform_11" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter x:Uid="ContentPresenter_15" Grid.Column="1" 
								HorizontalAlignment="Left" 
								Margin="4,0,0,0" 
								RecognizesAccessKey="True" 
								SnapsToDevicePixels="True" 
								VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_85" Property="IsChecked" Value="false">
                            <Setter x:Uid="Setter_392" Property="Margin" TargetName="arrow" Value="-0.526,4.842,0,0"></Setter>
                            <Setter x:Uid="Setter_393" Property="RenderTransform" TargetName="arrow">
                                <Setter.Value>
                                    <TransformGroup x:Uid="TransformGroup_15">
                                        <RotateTransform x:Uid="RotateTransform_19" Angle="90"/>
                                        <TranslateTransform x:Uid="TranslateTransform_12" X="0.17819090885901012" Y="0.43019090885900946"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter x:Uid="Setter_394" Property="Fill" TargetName="arrow" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_17">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_31" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_32" Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_395" Property="Fill" TargetName="arrow" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_18">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_33" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_34" Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_396" Property="Fill" TargetName="arrow" Value="{StaticResource TreeViewBackground}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_86" Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StatusBar -->
    <Style x:Uid="Style_52" TargetType="{x:Type StatusBar}">
        <Setter x:Uid="Setter_397" Property="Margin" Value="1 0 3 0"/>
        <Setter x:Uid="Setter_398" Property="Height" Value="18"/>
        <Setter x:Uid="Setter_399" Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter x:Uid="Setter_400" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_401" Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter x:Uid="Setter_402" Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter x:Uid="Setter_403" Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter x:Uid="Setter_404" Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter x:Uid="Setter_405" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_44" TargetType="{x:Type StatusBar}">
                    <Border x:Uid="Border_21" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter x:Uid="ItemsPresenter_3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Uid="Style_53" TargetType="{x:Type StatusBarItem}">
        <Setter x:Uid="Setter_406" Property="Margin" Value="4 0 4 0"/>
        <Setter x:Uid="Setter_407" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_408" Property="HorizontalContentAlignment" Value="Left"/>
        <Setter x:Uid="Setter_409" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_410" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_45" TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter x:Uid="ContentPresenter_16" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_87" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_411" Property="Foreground" Value="{StaticResource TextBoxDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Menu -->

    <Style x:Uid="Style_54" TargetType="{x:Type Menu}">
        <Setter x:Uid="Setter_412" Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter x:Uid="Setter_413" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_414" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_46" TargetType="{x:Type Menu}">
                    <Border x:Uid="Border_22" BorderBrush="{TemplateBinding BorderBrush}" 
        					BorderThickness="{TemplateBinding BorderThickness}" 
        					Background="{TemplateBinding Background}" 
        					Padding="{TemplateBinding Padding}" 
        					SnapsToDevicePixels="true">
                        <ItemsPresenter x:Uid="ItemsPresenter_4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Uid="Style_55" TargetType="{x:Type ContextMenu}">
        <Setter x:Uid="Setter_415" Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter x:Uid="Setter_416" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_417" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_47" TargetType="{x:Type ContextMenu}">
                    <Border x:Uid="Border_23" BorderBrush="{StaticResource SubMenuBorderBrush}" 
        					BorderThickness="{TemplateBinding BorderThickness}" 
        					Background="{StaticResource SubMenuBackgroundBrush}" 
        					Padding="{TemplateBinding Padding}" 
        					SnapsToDevicePixels="true">
                        <ItemsPresenter x:Uid="ItemsPresenter_5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Uid="ControlTemplate_48" x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid x:Uid="Grid_24" SnapsToDevicePixels="true">
            <Rectangle x:Uid="Rectangle_13" x:Name="Bg" 
                           Fill="{TemplateBinding Background}" 
                           Stroke="{TemplateBinding BorderBrush}" 
                           StrokeThickness="1"/>
            <Rectangle x:Uid="InnerBorder" x:Name="InnerBorder" Margin="1"/>
            <Grid x:Uid="Grid_25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_27" MinWidth="14" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_28" Width="4"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_29" Width="*"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_30" MinWidth="37"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_31" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_32" Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Uid="Icon" x:Name="Icon" 
                                      ContentSource="Icon" 
                                      Margin="1" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="Center"/>
                <Border x:Uid="GlyphPanel" x:Name="GlyphPanel" 
                            BorderBrush="Transparent"
							Margin="1" Visibility="Hidden">
                    <Path x:Uid="Glyph" x:Name="Glyph" 
								Data="{StaticResource Checkmark}" 
								Fill="{StaticResource ForegroundBrush}" 
								FlowDirection="LeftToRight"
								Margin="5,0,0,0"
								VerticalAlignment="Center" 
								Height="7.5"
								Stretch="Fill" 
								Width="7.5"/>
                </Border>
                <ContentPresenter x:Uid="ContentPresenter_17" x:Name="Content"  Grid.Column="2" 
                                      ContentSource="Header"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock x:Uid="TextBlock_1" Grid.Column="4" 
                               Margin="{TemplateBinding Padding}"
                               Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_88" Property="Icon" Value="{x:Null}">
                <Setter x:Uid="Setter_418" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_89" Property="IsChecked" Value="true">
                <Setter x:Uid="Setter_419" Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter x:Uid="Setter_420" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_90" Property="IsHighlighted" Value="true">
                <Setter x:Uid="Setter_421" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
                <Setter x:Uid="Setter_422" Property="TextBlock.Foreground" TargetName="Content" Value="{StaticResource MouseOverForegroundBrush}"/>
                <Setter x:Uid="Setter_423" Property="Fill" TargetName="Glyph" Value="{StaticResource MouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_91" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_424" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                <Setter x:Uid="Setter_425" Property="Fill" TargetName="Glyph" Value="{StaticResource DisabledMenuForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Uid="Style_56" x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter x:Uid="Setter_426" Property="ClickMode" Value="Hover"/>
        <Setter x:Uid="Setter_427" Property="MinWidth" Value="0"/>
        <Setter x:Uid="Setter_428" Property="MinHeight" Value="0"/>
        <Setter x:Uid="Setter_429" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_49" TargetType="{x:Type RepeatButton}">
                    <DockPanel x:Uid="DPButton" x:Name="DPButton" Background="{StaticResource SubMenuRepeatButtonBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Uid="ContentContainer" x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,0,2,5" VerticalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_92" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_430" Property="Background" TargetName="DPButton" Value="{StaticResource SubMenuHoverRepeatButtonBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <MenuScrollingVisibilityConverter x:Uid="MenuScrollingVisibilityConverter_1" x:Key="MenuScrollingVisibilityConverter"/>
    <Style x:Uid="Style_57" x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter x:Uid="Setter_431" Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter x:Uid="Setter_432" Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_433" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_50" TargetType="{x:Type ScrollViewer}">
                    <Grid x:Uid="Grid_26" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_33" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_12" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_13" Height="*"/>
                            <RowDefinition x:Uid="RowDefinition_14" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Uid="Border_24" Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter x:Uid="ScrollContentPresenter_1" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton x:Uid="RepeatButton_13" Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding x:Uid="MultiBinding_1" ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding x:Uid="Binding_1" Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_2" Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_3" Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_4" Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path x:Uid="UpArrow" x:Name="UpArrow" Data="{StaticResource MenuScrollUpArrowGeometry}" Fill="{StaticResource ForegroundBrush}"/>
                        </RepeatButton>
                        <RepeatButton x:Uid="RepeatButton_14" Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding x:Uid="MultiBinding_2" ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding x:Uid="Binding_5" Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_6" Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_7" Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding x:Uid="Binding_8" Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path x:Uid="DownArrow" x:Name="DownArrow" Data="{StaticResource MenuScrollDownArrowGeometry}" Fill="{StaticResource ForegroundBrush}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Uid="ControlTemplate_51" x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid x:Uid="Grid_27" SnapsToDevicePixels="true">
            <Rectangle x:Uid="Rectangle_14" x:Name="Bg" 
							Fill="{TemplateBinding Background}" 
							Margin="1"/>
            <DockPanel x:Uid="DockPanel_2">
                <ContentPresenter x:Uid="ContentPresenter_18" x:Name="Icon" 
										ContentSource="Icon"
										Margin="4,0,6,0" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										VerticalAlignment="Center"/>
                <Path x:Uid="Path_9" x:Name="GlyphPanel" 
							Data="{StaticResource Checkmark}" 
							Fill="{TemplateBinding Foreground}" 
							FlowDirection="LeftToRight" 
							Visibility="Collapsed"
							Margin="5,0,0,0"
							VerticalAlignment="Center" 
							Height="7.5"
							Stretch="Fill" 
							Width="7.5"/>
                <ContentPresenter x:Uid="ContentPresenter_19" x:Name="Content" ContentSource="Header" 
										Margin="{TemplateBinding Padding}" 
										RecognizesAccessKey="True" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
            <Popup x:Uid="Popup_2" x:Name="PART_Popup"
						AllowsTransparency="true" 
						Focusable="false" 
						HorizontalOffset="1" 
						IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
						PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
						Placement="Bottom" 
						VerticalOffset="-1">
                <Border x:Uid="Border_25" x:Name="Shdw" Background="Transparent">
                    <Border x:Uid="SubMenuBorder" x:Name="SubMenuBorder" 
								BorderBrush="{StaticResource SubMenuBorderBrush}" 
								BorderThickness="1" 
								Background="{StaticResource SubMenuBackgroundBrush}">
                        <ScrollViewer x:Uid="SubMenuScrollViewer" x:Name="SubMenuScrollViewer" 
											Margin="1,0" 
											Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid x:Uid="Grid_28" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Uid="Canvas_3" HorizontalAlignment="Left" 
											Height="0" 
											VerticalAlignment="Top" 
											Width="0">
                                    <Rectangle x:Uid="Rectangle_15" x:Name="OpaqueRect" 
													Fill="{StaticResource SubMenuBackgroundBrush}" 
													Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
													Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Uid="ItemsPresenter_6" x:Name="ItemsPresenter" 
													KeyboardNavigation.DirectionalNavigation="Cycle"
													Grid.IsSharedSizeScope="true" 
													Margin="2" 
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_93" Property="IsSuspendingPopupAnimation" Value="true">
                <Setter x:Uid="Setter_434" Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger x:Uid="Trigger_94" Property="Icon" Value="{x:Null}">
                <Setter x:Uid="Setter_435" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_95" Property="IsChecked" Value="true">
                <Setter x:Uid="Setter_436" Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter x:Uid="Setter_437" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_96" Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter x:Uid="Setter_438" Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter x:Uid="Setter_439" Property="Background" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger x:Uid="Trigger_97" Property="IsHighlighted" Value="true">
                <Setter x:Uid="Setter_440" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                <Setter x:Uid="Setter_441" Property="TextBlock.Foreground" TargetName="Content" Value="{StaticResource MouseOverForegroundBrush}"/>
                <Setter x:Uid="Setter_442" Property="Fill" TargetName="GlyphPanel" Value="{StaticResource MouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_98" Property="IsKeyboardFocused" Value="true">
                <Setter x:Uid="Setter_443" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_99" Property="IsSubmenuOpen" Value="true">
                <Setter x:Uid="Setter_444" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_100" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_445" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                <Setter x:Uid="Setter_446" Property="Fill" TargetName="GlyphPanel" Value="{StaticResource DisabledMenuForeground}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_101" Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter x:Uid="Setter_447" Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter x:Uid="Setter_448" Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Uid="ControlTemplate_52" x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid x:Uid="Grid_29" SnapsToDevicePixels="true">
            <Rectangle x:Uid="Rectangle_16" x:Name="Bg"
							Fill="{TemplateBinding Background}"
							Margin="1"/>
            <DockPanel x:Uid="DockPanel_3">
                <ContentPresenter x:Uid="ContentPresenter_20" x:Name="Icon"
										ContentSource="Icon"
										Margin="4,0,6,0"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="Center"/>
                <Path x:Uid="Path_10" x:Name="GlyphPanel"
							Data="{StaticResource Checkmark}"
							Fill="{TemplateBinding Foreground}"
							FlowDirection="LeftToRight"
							Margin="5,0,0,0"
							VerticalAlignment="Center" 
							Height="7.5"
							Stretch="Fill" 
							Width="7.5"
							Visibility="Collapsed"/>
                <ContentPresenter x:Uid="ContentPresenter_21" ContentSource="Header"
										Margin="{TemplateBinding Padding}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_102" Property="Icon" Value="{x:Null}">
                <Setter x:Uid="Setter_449" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_103" Property="IsChecked" Value="true">
                <Setter x:Uid="Setter_450" Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter x:Uid="Setter_451" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_104" Property="IsHighlighted" Value="true">
                <Setter x:Uid="Setter_452" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
                <Setter x:Uid="Setter_453" Property="TextBlock.Foreground" Value="{StaticResource MouseOverForegroundBrush}"/>
                <Setter x:Uid="Setter_454" Property="Fill" TargetName="GlyphPanel" Value="{StaticResource MouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_105" Property="IsKeyboardFocused" Value="true">
                <Setter x:Uid="Setter_455" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_106" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_456" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                <Setter x:Uid="Setter_457" Property="Fill" TargetName="GlyphPanel" Value="{StaticResource DisabledMenuForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Uid="ControlTemplate_53" x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid x:Uid="Grid_30" SnapsToDevicePixels="true">
            <Rectangle x:Uid="Rectangle_17" x:Name="Bg" Fill="{TemplateBinding Background}"
							Stroke="{TemplateBinding BorderBrush}" 
							StrokeThickness="1"/>
            <Grid x:Uid="Grid_31">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_34" MinWidth="14" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_35" Width="4"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_36" Width="*"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_37" MinWidth="37"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_38" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_39" Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Uid="ContentPresenter_22" x:Name="Icon"
										ContentSource="Icon"
										Margin="1" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="Center"/>
                <Border x:Uid="Border_26" x:Name="GlyphPanel" 
							Background="Transparent"
							Margin="1" 
							Visibility="Hidden">
                    <Path x:Uid="Path_11" x:Name="Glyph" 
								Data="{StaticResource Checkmark}"
								Fill="{StaticResource ForegroundBrush}" 
								FlowDirection="LeftToRight" 
								Margin="5,0,0,0"
								VerticalAlignment="Center" 
								Height="7.5"
								Stretch="Fill" 
								Width="7.5"/>
                </Border>
                <ContentPresenter x:Uid="ContentPresenter_23" x:Name="Content" Grid.Column="2"
										ContentSource="Header" 
										Margin="{TemplateBinding Padding}" 
										RecognizesAccessKey="True" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock  x:Uid="TextBlock_2" Grid.Column="4"
								Margin="{TemplateBinding Padding}" 
								Text="{TemplateBinding InputGestureText}"
								Visibility="Collapsed"/>
                <Path x:Uid="RightArrowPath" x:Name="RightArrowPath" Grid.Column="5" 
							Data="{StaticResource RightArrow}"
							Fill="{TemplateBinding Foreground}" 
							Margin="4,0,0,0" 
							VerticalAlignment="Center"/>
            </Grid>
            <Popup x:Uid="Popup_3" x:Name="PART_Popup" 
						AllowsTransparency="true" 
						Focusable="false" 
						HorizontalOffset="-2" 
						IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
						PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						Placement="Right" 
						VerticalOffset="-3">
                <Border x:Uid="Border_27" x:Name="Shdw" Background="Transparent">
                    <Border x:Uid="Border_28" x:Name="SubMenuBorder" 
								BorderBrush="{StaticResource SubMenuBorderBrush}"
								BorderThickness="1"
								Background="{StaticResource SubMenuBackgroundBrush}">
                        <ScrollViewer x:Uid="ScrollViewer_2" x:Name="SubMenuScrollViewer" 
											Margin="1,0" 
											Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid x:Uid="Grid_32" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Uid="Canvas_4" HorizontalAlignment="Left"
											Height="0"
											VerticalAlignment="Top"
											Width="0">
                                    <Rectangle x:Uid="Rectangle_18" x:Name="OpaqueRect"	
													Fill="{StaticResource SubMenuBackgroundBrush}" 
													Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
													Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Uid="ItemsPresenter_7" x:Name="ItemsPresenter" 
													KeyboardNavigation.DirectionalNavigation="Cycle"
													Grid.IsSharedSizeScope="true" 
													Margin="2" 
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_107" Property="IsSuspendingPopupAnimation" Value="true">
                <Setter x:Uid="Setter_458" Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger x:Uid="Trigger_108" Property="Icon" Value="{x:Null}">
                <Setter x:Uid="Setter_459" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_109" Property="IsChecked" Value="true">
                <Setter x:Uid="Setter_460" Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter x:Uid="Setter_461" Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger x:Uid="Trigger_110" Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter x:Uid="Setter_462" Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter x:Uid="Setter_463" Property="Background" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger x:Uid="Trigger_111" Property="IsHighlighted" Value="true">
                <Setter x:Uid="Setter_464" Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
                <Setter x:Uid="Setter_465" Property="TextBlock.Foreground" TargetName="Content" Value="{StaticResource MouseOverForegroundBrush}"/>
                <Setter x:Uid="Setter_466" Property="Fill" TargetName="RightArrowPath" Value="{StaticResource MouseOverForegroundBrush}"/>
                <Setter x:Uid="Setter_467" Property="Fill" TargetName="Glyph" Value="{StaticResource MouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_112" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_468" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                <Setter x:Uid="Setter_469" Property="Fill" TargetName="Glyph" Value="{StaticResource DisabledMenuForeground}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_113" Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter x:Uid="Setter_470" Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter x:Uid="Setter_471" Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Uid="Style_58" TargetType="{x:Type MenuItem}">
        <Setter x:Uid="Setter_472" Property="Foreground" Value="{StaticResource ForegroundBrush}"></Setter>
        <Setter x:Uid="Setter_473" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_474" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_475" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_476" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_477" Property="MinHeight" Value="21"/>
        <Setter x:Uid="Setter_478" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_479" Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_114" Property="Role" Value="TopLevelHeader">
                <Setter x:Uid="Setter_480" Property="Height" Value="25"/>
                <Setter x:Uid="Setter_481" Property="Padding" Value="7,6,8,3"/>
                <Setter x:Uid="Setter_482" Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_115" Property="Role" Value="TopLevelItem">
                <Setter x:Uid="Setter_483" Property="Height" Value="25"/>
                <Setter x:Uid="Setter_484" Property="Padding" Value="7,6,8,3"/>
                <Setter x:Uid="Setter_485" Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_116" Property="Role" Value="SubmenuHeader">
                <Setter x:Uid="Setter_486" Property="Height" Value="21"/>
                <Setter x:Uid="Setter_487" Property="Padding" Value="2,4,2,2"/>
                <Setter x:Uid="Setter_488" Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_117" Property="Role" Value="SubmenuItem">
                <Setter x:Uid="Setter_489" Property="Height" Value="21"/>
                <Setter x:Uid="Setter_490" Property="Padding" Value="2,4,2,2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Separator -->
    <Style x:Uid="Style_59" x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter x:Uid="Setter_491" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_492" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_54" TargetType="{x:Type Separator}">
                    <Grid x:Uid="Grid_33" Margin="3,2,3,2" SnapsToDevicePixels="true" UseLayoutRounding="False">
                        <Rectangle x:Uid="Rectangle_19" Fill="{StaticResource MenuSeparatorBrush}" Height="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ListBox -->

    <Style x:Uid="Style_60" TargetType="{x:Type ListBox}">
        <Setter x:Uid="Setter_493" Property="Background" Value="{StaticResource ListBackground}"/>
        <Setter x:Uid="Setter_494" Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter x:Uid="Setter_495" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_496" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_497" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_498" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_499" Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter x:Uid="Setter_500" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_501" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_502" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_503" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_55" TargetType="{x:Type ListBox}">
                    <Border x:Uid="Border_29" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="1"
                                SnapsToDevicePixels="true">
                        <ScrollViewer x:Uid="ScrollViewer_3" Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter x:Uid="ItemsPresenter_8" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger x:Uid="MultiTrigger_19">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_35" Property="IsGrouping" Value="true"/>
                                <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_504" Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_61" TargetType="{x:Type ListBoxItem}">
        <Setter x:Uid="Setter_505" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_506" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_507" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_508" Property="Padding" Value="2,0,0,0"/>
        <Setter x:Uid="Setter_509" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_56" TargetType="{x:Type ListBoxItem}">
                    <Border x:Uid="Border_30" x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                        <ContentPresenter x:Uid="ContentPresenter_24" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_118" Property="IsSelected" Value="true">
                            <Setter x:Uid="Setter_510" Property="Background" TargetName="Bd" Value="{StaticResource SelectedListItem}"/>
                            <Setter x:Uid="Setter_511" Property="Foreground" Value="{StaticResource SelectedListItemForeground}"/>
                        </Trigger>
                        <!--<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>-->
                        <MultiTrigger x:Uid="MultiTrigger_20">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_36" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_37" Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_512" Property="Background" TargetName="Bd" Value="{StaticResource MouseOverListItem}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_119" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_513" Property="Foreground" Value="{StaticResource DisabledMenuForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- GroupBox -->
    <BorderGapMaskConverter x:Uid="BorderGapMaskConverter_1" x:Key="BorderGapMaskConverter"/>
    <Style x:Uid="Style_62" TargetType="{x:Type GroupBox}">
        <Setter x:Uid="Setter_514" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_515" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_516" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_517" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_57" TargetType="{x:Type GroupBox}">
                    <Grid x:Uid="Grid_34" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_40" Width="6"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_41" Width="Auto"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_42" Width="*"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_43" Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_15" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_16" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_17" Height="*"/>
                            <RowDefinition x:Uid="RowDefinition_18" Height="6"/>
                        </Grid.RowDefinitions>
                        <Border x:Uid="Border_31" BorderBrush="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Grid.ColumnSpan="4" 
                                    Grid.Column="0"
                                    CornerRadius="3"
                                    Grid.Row="1"
                                    Grid.RowSpan="3">
                            <!--<Border Grid.ColumnSpan="4"
									CornerRadius="3"
									Grid.Row="1"
									Grid.RowSpan="3">-->
                            <Border.OpacityMask>
                                <MultiBinding x:Uid="MultiBinding_3" ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding x:Uid="Binding_9" ElementName="Header" Path="ActualWidth"/>
                                    <Binding x:Uid="Binding_10" Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding x:Uid="Binding_11" Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border x:Uid="Border_32" BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="3">
                                <!--<Border BorderBrush="White"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="4"/>-->
                            </Border>
                        </Border>
                        <Border x:Uid="Header" x:Name="Header"
									Grid.Column="1"
									Padding="3,1,3,0"
									Grid.Row="0"
									Grid.RowSpan="2">
                            <ContentPresenter x:Uid="ContentPresenter_25" ContentSource="Header"
													RecognizesAccessKey="True"
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter x:Uid="ContentPresenter_26" Grid.ColumnSpan="2"
												Grid.Column="1"
												Margin="{TemplateBinding Padding}"
												Grid.Row="2"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGrid styles -->
    
    <!-- DataGridSelectAllButtonStyle -->
    <Style x:Uid="Style_63" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_518" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_58" TargetType="{x:Type Button}">
                    <Grid x:Uid="Grid_35">
                        <Rectangle x:Uid="Rectangle_20" x:Name="Border" Fill="{StaticResource DataGridHeaderBackgroundBrush}"
                                   SnapsToDevicePixels="True"/>
                        <Polygon x:Uid="Polygon_1" x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3"
                                 Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_120" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_519" Property="Stroke" TargetName="Border" Value="{StaticResource DataGridHeaderMouseOverBrush}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_121" Property="IsPressed" Value="True">
                            <Setter x:Uid="Setter_520" Property="Fill" TargetName="Border" Value="{StaticResource DataGridHeaderMouseOverBrush}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_122" Property="IsEnabled" Value="False">
                            <Setter x:Uid="Setter_521" Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGrid -->
    <Style x:Uid="Style_64" TargetType="{x:Type DataGrid}">
        <Setter x:Uid="Setter_522" Property="RowHeight" Value="22" />
        <Setter x:Uid="Setter_523" Property="HorizontalGridLinesBrush" Value="{DynamicResource GridLinesBrush}"/>
        <Setter x:Uid="Setter_524" Property="VerticalGridLinesBrush" Value="{DynamicResource GridLinesBrush}"/>
        <Setter x:Uid="Setter_525" Property="Background" Value="{DynamicResource DataGridBackgroundBrush}"/>
        <Setter x:Uid="Setter_526" Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_527" Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorderBrush}"/>
        <Setter x:Uid="Setter_528" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_529" Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter x:Uid="Setter_530" Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter x:Uid="Setter_531" Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter x:Uid="Setter_532" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_533" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_59" TargetType="{x:Type DataGrid}">
                    <Border x:Uid="Border_33" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
                        <ScrollViewer x:Uid="DG_ScrollViewer" x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate x:Uid="ControlTemplate_60" TargetType="{x:Type ScrollViewer}">
                                    <Grid x:Uid="Grid_36">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Uid="ColumnDefinition_44" Width="Auto"/>
                                            <ColumnDefinition x:Uid="ColumnDefinition_45" Width="*"/>
                                            <ColumnDefinition x:Uid="ColumnDefinition_46" Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition x:Uid="RowDefinition_19" Height="Auto"/>
                                            <RowDefinition x:Uid="RowDefinition_20" Height="*"/>
                                            <RowDefinition x:Uid="RowDefinition_21" Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button x:Uid="Button_1" Command="{x:Static DataGrid.SelectAllCommand}"
    											Focusable="false"
    											Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
    											Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
    											Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Uid="PART_ColumnHeadersPresenter" x:Name="PART_ColumnHeadersPresenter"
    											Grid.Column="1"
    											Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Uid="ScrollContentPresenter_2" x:Name="PART_ScrollContentPresenter"
    											CanContentScroll="{TemplateBinding CanContentScroll}"
    											Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Uid="ScrollBar_1" x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}"
    											Orientation="Vertical" Grid.Row="1"
    											Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
    											Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    											ViewportSize="{TemplateBinding ViewportHeight}"
    											Style="{StaticResource VerticalScrollBarStyle}"/>
                                        <Grid x:Uid="Grid_37" Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Uid="ColumnDefinition_47" Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition x:Uid="ColumnDefinition_48" Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Uid="ScrollBar_2" x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}"
    												Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
    												Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
    												ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource HorisontalScrollBarStyle}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter x:Uid="ItemsPresenter_9" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger x:Uid="MultiTrigger_21">
                <MultiTrigger.Conditions>
                    <Condition x:Uid="Condition_38" Property="IsGrouping" Value="true"/>
                    <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_534" Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- ColumnHeaderGripperStyle -->
    <Style x:Uid="Style_65" x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter x:Uid="Setter_535" Property="Width" Value="8"/>
        <Setter x:Uid="Setter_536" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_537" Property="Cursor" Value="SizeWE"/>
        <Setter x:Uid="Setter_538" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_61" TargetType="{x:Type Thumb}">
                    <Border x:Uid="Border_34" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGridColumnHeader -->
    <Style x:Uid="Style_66" TargetType="{x:Type DataGridColumnHeader}">
        <Setter x:Uid="Setter_539" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_540" Property="BorderThickness" Value="1 1 0 1"/>
        <Setter x:Uid="Setter_541" Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorderBrush}"/>
        <Setter x:Uid="Setter_542" Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}"/>
        <Setter x:Uid="Setter_543" Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter x:Uid="Setter_544" Property="Padding" Value="3"/>
        <Setter x:Uid="Setter_545" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_62" TargetType="{x:Type DataGridColumnHeader}">
                    <Grid x:Uid="Grid_38">
                        <Border x:Uid="Border_35" BorderBrush="{TemplateBinding BorderBrush}"
														 BorderThickness="{TemplateBinding BorderThickness}"
														 Background="{TemplateBinding Background}"
														 Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Uid="ContentPresenter_27" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Thumb x:Uid="PART_LeftHeaderGripper" x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
									Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Uid="PART_RightHeaderGripper" x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
									Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_123" Property="IsMouseOver" Value="True">
                            <Setter x:Uid="Setter_546" Property="Background" Value="{StaticResource DataGridHeaderMouseOverBrush}"/>
                            <Setter x:Uid="Setter_547" Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGridRow -->
    <Style x:Uid="Style_67" TargetType="{x:Type DataGridRow}">
        <Setter x:Uid="Setter_548" Property="Background" Value="{DynamicResource DataGridRowBackgroundBrush}"/>
        <Setter x:Uid="Setter_549" Property="SnapsToDevicePixels" Value="true"/>
        <Setter x:Uid="Setter_550" Property="Padding" Value="0"/>
        <Setter x:Uid="Setter_551" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_552" Property="Border.CornerRadius" Value="3"/>
        <Setter x:Uid="Setter_553" Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter x:Uid="Setter_554" Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_63">
                    <TextBlock x:Uid="TextBlock_3" Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_555" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_64" TargetType="{x:Type DataGridRow}">
                    <Border x:Uid="DGR_Border" x:Name="DGR_Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid x:Uid="SelectiveScrollingGrid_1">
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition x:Uid="ColumnDefinition_49" Width="Auto"/>
                                <ColumnDefinition x:Uid="ColumnDefinition_50" Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition x:Uid="RowDefinition_22" Height="*"/>
                                <RowDefinition x:Uid="RowDefinition_23" Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter x:Uid="DataGridCellsPresenter_1" Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter x:Uid="DataGridDetailsPresenter_1" Grid.Column="1" Grid.Row="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
													  Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader x:Uid="DataGridRowHeader_1" Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger x:Uid="MultiTrigger_22">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_39" Property="IsMouseOver" Value="true"/>
                                <Condition x:Uid="Condition_40" Property="IsSelected" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_556" Property="Background" TargetName="DGR_Border" Value="{StaticResource MouseOverListItem}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_124" Property="IsSelected" Value="True">
                            <Setter x:Uid="Setter_557" TargetName="DGR_Border" Property="Background" Value="{StaticResource DataGridRowSelectedBrush}" />
                            <Setter x:Uid="Setter_558" TargetName="DGR_Border" Property="CornerRadius" Value="3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_125" Property="IsNewItem" Value="True">
                <Setter x:Uid="Setter_559" Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_126" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_560" Property="Background" Value="{DynamicResource DataGridRowSelectedBrush}"/>
                <Setter x:Uid="Setter_561" Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- DataGridCell -->
    <Style x:Uid="Style_68" TargetType="{x:Type DataGridCell}">
        <Setter x:Uid="Setter_562" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_563" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_564" Property="BorderThickness" Value="0"/>
        <Setter x:Uid="Setter_565" Property="Padding" Value="5,0,5,0"/>
        <Setter x:Uid="Setter_566" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_65" TargetType="{x:Type DataGridCell}">
                    <Border x:Uid="Border_36" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Uid="ContentPresenter_28" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												VerticalAlignment="Center"
												Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_127" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_567" Property="Background" Value="Transparent"/>
                <Setter x:Uid="Setter_568" Property="Foreground" Value="Black"/>
                <Setter x:Uid="Setter_569" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger x:Uid="Trigger_128" Property="IsKeyboardFocusWithin" Value="True">
                <Setter x:Uid="Setter_570" Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <MultiTrigger x:Uid="MultiTrigger_23">
                <MultiTrigger.Conditions>
                    <Condition x:Uid="Condition_41" Property="IsSelected" Value="true"/>
                    <Condition x:Uid="Condition_42" Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_571" Property="Background" Value="{StaticResource DataGridRowSelectedBrush}"/>
            </MultiTrigger>
            <Trigger x:Uid="Trigger_129" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_572" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- RowHeaderGripperStyle -->
    <Style x:Uid="Style_69" x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter x:Uid="Setter_573" Property="Height" Value="8"/>
        <Setter x:Uid="Setter_574" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_575" Property="Cursor" Value="SizeNS"/>
        <Setter x:Uid="Setter_576" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_66" TargetType="{x:Type Thumb}">
                    <Border x:Uid="Border_37" Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGridRowHeader -->
    <Style x:Uid="Style_70" TargetType="{x:Type DataGridRowHeader}">
        <Setter x:Uid="Setter_577" Property="Background" Value="{DynamicResource DataGridBackgroundBrush}"/>
        <Setter x:Uid="Setter_578" Property="BorderBrush" Value="{DynamicResource DataGridBackgroundBrush}"/>
        <Setter x:Uid="Setter_579" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_580" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_67" TargetType="{x:Type DataGridRowHeader}">
                    <Grid x:Uid="Grid_39">
                        <Border x:Uid="Border_38" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <StackPanel x:Uid="StackPanel_2" Orientation="Horizontal">
                                <ContentPresenter x:Uid="ContentPresenter_29" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"/>
                                <Control x:Uid="Control_1" SnapsToDevicePixels="false"
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                            </StackPanel>
                        </Border>
                        <Thumb x:Uid="PART_TopHeaderGripper" x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                        <Thumb x:Uid="PART_BottomHeaderGripper" x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
